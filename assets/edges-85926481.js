import"./bootstrap.min-e8f71853.js";import{V as x,a as y,T as f,F as g,S as w,b,C as h,D as k,p as E,c as F,d as v,G as T,e as A,f as C,M as N,g as L,h as O,B as j,i as I,t as R}from"./networklayer-d214f836.js";import{g as q,c as G,a as V}from"./networkeditor-83b21484.js";import{c as D}from"./table-bdeb1a95.js";let l=[];const H="http://127.0.0.1:8020/";function _(){l=[],c.getSource().clear()}function B(t,n){let s;return t.getGeometry().getType()==="LineString"?s=new f({text:t.get("index").toString(),font:"10px Open Sans",fill:new g({color:"#000"}),stroke:new w({color:"#fff",width:3}),offsetX:0,offsetY:-12,textAlign:"center",textBaseline:"middle"}):s=new f({text:t.get("index").toString(),font:"14px Open Sans",offsetX:0,offsetY:0,textAlign:"center",textBaseline:"middle"}),new b({stroke:new w({color:"yellow",width:2}),text:s,image:new h({radius:12,fill:new g({color:"yellow"})})})}const c=new x({source:new y,style:B});function J(){c.getSource().forEachFeature(function(t){t.getGeometry().getType()==="LineString"&&c.getSource().removeFeature(t)})}function M(t,n,s){const o=q(),e=new XMLHttpRequest;e.open("POST",H+"solve_shortest_path_from_edges",!0),e.setRequestHeader("Content-Type","application/json"),e.setRequestHeader("Access-Control-Allow-Origin","*"),e.onload=function(){if(e.status===200){const r=JSON.parse(e.responseText);console.log(r),J();const i=new T().readFeatures(r);n.getSource().addFeatures(i)}else{const r="Request failed. Status code: "+e.status;p(r),console.error(r)}},e.onerror=function(){p("Request failed. Network error.")};const a=JSON.stringify({path:s,edits:o});e.send(a)}function P(t,n,s){let o=F([n]);const e=t.getView().getResolution()*3;return o=v(o,e),s.getSource().getFeaturesInExtent(o).length>0}function X(t,n,s){const o=t.feature,e=o.getGeometry().getCoordinates(),a=n.getSource().getClosestFeatureToCoordinate(e);a&&(l.push(a.getId()),o.set("index",l.length)),l.length>1&&M(n,s,l)}function p(t){A({text:t,duration:3e3,close:!0,gravity:"bottom",position:"right",stopOnFocus:!0}).showToast()}function Y(t,n){t.addLayer(c);const s=new k({source:c.getSource(),type:"Point",condition:function(o){return E(o)===!0?P(t,o.coordinate,n):!1}});return s.on("drawend",function(o){X(o,n,c)}),s}function z(){const t="./data/dublin.json",n=[-700886.9046790214,7045529032412218e-9,-695548.0308066505,7048223495319679e-9],o=C(t,"#1a2b39");D();const e=new N({target:"map",layers:[o],view:new L({center:O(n),extent:n,zoom:16})}),a=[{text:"Hide/Show Labels",callback:R},"-",{text:"Activate Edge Solver",callback:function(){r(),u.setActive(!0)}},{text:"Clear Edges",callback:_},"-",{text:"Activate Network Editor",callback:function(){r(),i.setActive(!0)}},{text:"Clear Network Edits",callback:V},"-"];function r(){[u,i].forEach(function(m){m.setActive(!1)})}const d=new j({width:170,defaultItems:!0,items:a});e.addControl(d);const i=G(e,o),u=Y(e,o);e.addInteraction(u),e.addInteraction(i),r(),u.setActive(!0);const S=new I({source:o.getSource()});e.addInteraction(S)}z();
//# sourceMappingURL=edges-85926481.js.map
