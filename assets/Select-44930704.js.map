{"version":3,"file":"Select-44930704.js","sources":["../../node_modules/ol/interaction/Select.js"],"sourcesContent":["/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n"],"names":["SelectEventType","SelectEvent","Event","type","selected","deselected","mapBrowserEvent","originalFeatureStyles","Select","Interaction","options","singleClick","never","shiftKeyOnly","TRUE","getDefaultStyleFunction","Collection","layerFilter","layers","layer","feature","getUid","hitTolerance","map","CollectionEventType","evt","VectorLayer","key","interactions","i","interaction","add","remove","toggle","set","features","clear","Feature","index","j","styles","createEditingStyle","extend","Select$1"],"mappings":"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"}